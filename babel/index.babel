calculator = function(){
let string_to_eval = "",
  array = [],
  answer,
  stored_number = false,
  number_val,
  calc_val,
  first_is_zero = false,
  last_nums_in_string = "",
  regex_calc_symb = /(\+|\/|\-|\*)/g,
  answer_ = document.getElementById("answer"),
  answer_html,
    temp_array1, temp_array2;

function change_font_size_if_over_20() {
  if (string_to_eval.length < 18) {
    answer_.style.fontSize = "25px";
  }
  if (string_to_eval.length >= 18 && string_to_eval.length <= 59) {
    answer_.style.fontSize = "16px";
    //answer_.stlye.
  }
}

//button click between 1-9 gets the value of the button id and adds it to string.
function add_one_to_nine(clicked_id) {
  change_font_size_if_over_20();
  if (string_to_eval.length > 59) {
    return;
  }
  number_val = clicked_id;

  if (
    last_nums_in_string.charAt(0) === "0" &&
    last_nums_in_string.length === 1
  ) {
    last_nums_in_string = "";
    string_to_eval = string_to_eval.slice(0, -1);
    string_to_eval += number_val;
    last_nums_in_string += number_val;
    convert_correct_symb();
    answer_.innerHTML = answer_html;
    //answer_.innerHTML = string_to_eval;
  } else {
    string_to_eval += number_val;
    last_nums_in_string += number_val;
    convert_correct_symb();
    answer_.innerHTML = answer_html;
    //answer_.innerHTML = string_to_eval;
  }
}
//check if a string has been evaluated: if yes, clicking num or calc makes string empty.
function check_stored_number() {
  if (stored_number) {
    answer_.innerHTML = "0";
    stored_number = "";
  } else {
    return;
  }
  convert_correct_symb();
  answer_.innerHTML = answer_html;
  //answer_.innerHTML = string_to_eval;
}

function add_sub_div_or_mul(one_of_the_four) {
  if (string_to_eval.length > 59) {
    return;
  }
  change_font_size_if_over_20();
  check_stored_number();
  let e = string_to_eval.charAt(string_to_eval.length - 1);

  calc_val = one_of_the_four;
  if (e === "+" || e === "/" || e === "*" || e === "-" || !e.length) {
    return;
  } else {
    last_nums_in_string = "";
    string_to_eval += calc_val;
    convert_correct_symb();
    answer_.innerHTML = answer_html;
    //answer_.innerHTML = string_to_eval;
  }
}
function maybe_add_zero() {
  if (string_to_eval.length > 59) {
    return;
  }
  change_font_size_if_over_20();
  if (last_nums_in_string.length === 0) {
    string_to_eval += "0";
    last_nums_in_string += "0";
    convert_correct_symb();
    answer_.innerHTML = answer_html;
    //answer_.innerHTML = string_to_eval;
  }
  if (last_nums_in_string.charAt(0) === "0") {
    return;
  } else {
    string_to_eval += "0";
    last_nums_in_string += "0";
    convert_correct_symb();
    answer_.innerHTML = answer_html;
    //answer_.innerHTML = string_to_eval;
  }
}
//add dot if a dot doesn't exist yet or string is not len = 0
function maybe_add_dot() {
  if (string_to_eval.length > 59) {
    return;
  }
  change_font_size_if_over_20();

  if (last_nums_in_string.length === 0) {
    return;
  }
  if (last_nums_in_string.indexOf(".") > -1) {
    return;
  } else {
    string_to_eval += ".";
    last_nums_in_string += ".";
  }
  convert_correct_symb();
  answer_.innerHTML = answer_html;
  //answer_.innerHTML = string_to_eval;
}

// Press the "AC" button and it displays "0" and then the string is back to "" for next input.
const deleteArray = () => {
  string_to_eval = "";
  last_nums_in_string = "";
  change_font_size_if_over_20();
  answer_.innerHTML = "0";
};

function cancelLastInput() {
  if (regex_calc_symb.test(string_to_eval.charAt(string_to_eval.length - 1))) {
    string_to_eval = string_to_eval.slice(0, -1);
    last_nums_in_string = get_last_nums_in_string();
    convert_correct_symb();
    change_font_size_if_over_20()
    answer_.innerHTML = answer_html;
    //answer_.innerHTML = string_to_eval;
  } else {
    last_nums_in_string = get_last_nums_in_string();
    let last_nums_in_string_length = last_nums_in_string.length;
    string_to_eval = string_to_eval.slice(0, -last_nums_in_string_length);
    convert_correct_symb();
    change_font_size_if_over_20()
    answer_.innerHTML = answer_html;
    //answer_.innerHTML = string_to_eval;
  }
}
function get_last_nums_in_string() {
  let plus_ = string_to_eval.lastIndexOf("+"),
    minus_ = string_to_eval.lastIndexOf("-"),
    times_ = string_to_eval.lastIndexOf("*"),
    div_ = string_to_eval.lastIndexOf("/");
  let e = [];
  e.push(plus_, minus_, times_, div_);
  e.sort();
  let j = e[e.length - 1];
  let temp = string_to_eval;
  let i = string_to_eval.length - 1;
  let z = "";
  do {
    z += temp.charAt(temp.length - 1);
    temp = temp.slice(0, -1);
    i--;
  } while (i > j);
  return z
    .split("")
    .reverse()
    .join("");
}

// use eval to evaluate string
const evaluateArray = () => {
  let h = string_to_eval.charAt(string_to_eval.length - 1);
  if (h === "+" || h === "-" || h === "*" || h === "/") {
    stored_number = "";
    return;
  }
  if (h.length === 0) {
    return;
  }
  if (!Number(eval(string_to_eval))) {
    return;
  } else {
    let answer = eval(string_to_eval);
    stored_number = answer;
    string_to_eval = answer.toString();
    change_font_size_if_over_20();
    last_nums_in_string = "";
    answer_.innerHTML = answer;
    string_to_eval = "";
  }
};
// "OFF" button displays empty string and sets string to empty string
const turnOff = () => {
  string_to_eval = "";
  last_nums_in_string = "";
  answer_.innerHTML = "";
};

function convert_correct_symb() {
  answer_html = Array.from(string_to_eval);
  temp_array1 = answer_html.map(x => x === "/" ? x = "&#247;" : x = x);
  temp_array2 = temp_array1.map(x => x === "*" ? x = "&times;" : x = x);
  
    //return x === "/" ? x = "&#247;" : x = x;
    
 
 
  answer_html = temp_array2.join("");
}
return {
  deleteArray : deleteArray,
  turnOff : turnOff,
  cancelLastInput : cancelLastInput,
  add_sub_div_or_mul : add_sub_div_or_mul,
  add_one_to_nine : add_one_to_nine,
  add_sub_div_or_mul : add_sub_div_or_mul,
  maybe_add_zero : maybe_add_zero,
  maybe_add_dot : maybe_add_dot,
  evaluateArray : evaluateArray
}
  
}();



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

